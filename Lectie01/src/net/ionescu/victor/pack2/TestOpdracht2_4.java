package net.ionescu.victor.pack2;

/**
 * Tests generated by TUnit.
 */
public class TestOpdracht2_4 {

	/**
	 * Test: Onderdeel1
	 */
	public static void test_Onderdeel1() {
		System.out.println("Test: Onderdeel1");
		
		// before
		Punt p1 = new Punt(1.0,2.0);
		Punt p2 = new Punt(3.0,4.0);

		// test code
		printTestStatement("Cirkel c1 = new Cirkel(p1,3.0);");
		Cirkel c1 = new Cirkel(p1,3.0);
		printTestResult("c1.getMiddelpunt() == p1", c1.getMiddelpunt(), p1);
		printTestResult("c1.getStraal() == 3.0", c1.getStraal(), 3.0);
		printTestResult("c1.toString() == \"<Cirkel(<Punt(1.0,2.0)>,3.0)>\"", c1.toString(), "<Cirkel(<Punt(1.0,2.0)>,3.0)>");
		
		printTestStatement("Cirkel c2 = new Cirkel(p1,-7.0);");
		Cirkel c2 = new Cirkel(p1,-7.0);
		printTestResult("c2.getMiddelpunt() == p1", c2.getMiddelpunt(), p1);
		printTestResult("c2.getStraal() == -1.0", c2.getStraal(), -1.0);
		printTestResult("c2.toString() == \"<Cirkel(<Punt(1.0,2.0)>,-1.0)>\"", c2.toString(), "<Cirkel(<Punt(1.0,2.0)>,-1.0)>");
		
		System.out.println();
	}

	/**
	 * Test: Onderdeel2
	 */
	public static void test_Onderdeel2() {
		System.out.println("Test: Onderdeel2");
		
		// before
		Punt p1 = new Punt(1.0,2.0);
		Punt p2 = new Punt(3.0,4.0);

		// test code
		printTestStatement("Cirkel c1 = new Cirkel(p1,1.0);");
		Cirkel c1 = new Cirkel(p1,1.0);
		printTestStatement("Cirkel c2 = new Cirkel(p2,1.0);");
		Cirkel c2 = new Cirkel(p2,1.0);
		printTestResult("c1.equals(c1) == true", c1.equals(c1), true);
		printTestResult("c1.equals(c2) == false", c1.equals(c2), false);
		printTestResult("c1.omtrek() == 6.2831853071", c1.omtrek(), 6.2831853071);
		printTestResult("c1.oppervlakte() ==3.1415926535", c1.oppervlakte(), 3.1415926535);
		printTestResult("c1.overlapt(c2) == false", c1.overlapt(c2), false);
		printTestStatement("c1.transleer(1.0,1.0);");
		c1.transleer(1.0,1.0);
		printTestResult("c1.getMiddelpunt().equals(new Punt(2,3)) == true", c1.getMiddelpunt().equals(new Punt(2,3)), true);
		printTestResult("c1.overlapt(c2)== true", c1.overlapt(c2), true);
		
		System.out.println();
	}
	
	/**
	 * Test: Onderdeel3
	 */
	public static void test_Onderdeel3()
	{
		Punt p1 = new Punt(1.0,2.0);
		Punt p2 = new Punt(1.0,2.0);
		Punt p3 = new Punt(2.0,4.0);
		Cirkel c1 = new Cirkel(p1,1.0);
		Cirkel c2 = new Cirkel(p2,1.0);
		Cirkel c3 = new Cirkel(p3,1.0);
		
		printTestStatement("Punt p1 = new Punt(1.0,2.0)");
		printTestStatement("Punt p2 = new Punt(1.0,2.0)");
		printTestStatement("Punt p3 = new Punt(2.0,4.0)");
		printTestStatement("Cirkel c1 = new Cirkel(p1,1.0)");
		printTestStatement("Cirkel c2 = new Cirkel(p2,1.0)");
		printTestStatement("Cirkel c3 = new Cirkel(p3,1.0)");
		
		printTestResult("c1.equals(c1)", c1.equals(c1), true);
		printTestResult("c1.equals(c2)", c1.equals(c2), true);
		printTestResult("c3.equals(c2)", c3.equals(c2), false);

	}
	

	/** Prints the statement */
	public static void printTestStatement(String testStatement) {
		System.out.println(" "+testStatement);
	}

	/**
	 * Compares the actual result with the expected result
	 * and prints the result of this test
	 */
	public static void printTestResult(String testName, int actual, int expected) {
		System.out.printf(" %-50s => ", testName);
		if (expected == actual) {
			System.out.println("passed");
		} else {
			System.out.println(" FAILED");
			System.out.println("  -> expected " + expected + " but was " + actual);
			System.out.println();
		}
	}

	/**
	 * Compares the actual result with the expected result
	 * and prints the result of this test
	 */
	public static void printTestResult(String testName, double actual, double expected) {
		System.out.printf(" %-50s => ", testName);
		if (Math.abs(expected - actual) < 1e-10) {
			System.out.println("passed");
		} else {
			System.out.println(" FAILED");
			System.out.println("  -> expected " + expected + " but was " + actual);
			System.out.println();
		}
	}

	/**
	 * Compares the actual result with the expected result
	 * and prints the result of this test
	 */
	public static void printTestResult(String testName, boolean actual, boolean expected) {
		System.out.printf(" %-50s => ", testName);
		if (expected == actual) {
			System.out.println("passed");
		} else {
			System.out.println(" FAILED");
			System.out.println("  -> expected " + expected + " but was " + actual);
			System.out.println();
		}
	}

	/**
	 * Compares the actual result with the expected result
	 * and prints the result of this test
	 */
	public static void printTestResult(String testName, int[] actual, int[] expected) {
		System.out.printf(" %-50s => ", testName);
		if (java.util.Arrays.equals(expected, actual)) {
			System.out.println("passed");
		} else {
			System.out.print(" FAILED\\n -> expected:\\n ");
			System.out.println(java.util.Arrays.toString(expected));
			System.out.print("    but was:\\n ");
			System.out.println(java.util.Arrays.toString(actual));
			System.out.println();
		}
	}

	/**
	 * Compares the actual result with the expected result
	 * and prints the result of this test
	 */
	public static void printTestResult(String testName, Object actual, Object expected) {
		System.out.printf(" %-50s => ", testName);
		if ((expected==null && actual==null) || (expected!=null && expected.equals(actual))) {
			System.out.println("passed");
		} else {
			System.out.print(" FAILED\\n -> expected:\\n");
			System.out.print(" \"" + expected + "\"");
			System.out.print("    but was:\\n    ");
			System.out.print(" \"" + actual+ "\"");
			System.out.println();
		}
	}


	/**
	 * Main method: run all tests.
	 */
	public static void main(String[] args) {
		test_Onderdeel1();
		test_Onderdeel2();
		test_Onderdeel3();
	}

}
